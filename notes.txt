Bugs:
// Fix shopcontroller shop creation to not hang when a category+rarity combo has no items to pull from to begin with
// Make sure all fields that need to be entered can only be entered as correct type i.e. age being a number for NPCs (do I really need this?)
// Error message handling (things like if you try to delete a note that has already been deleted)
// page loads that move back to the top of the page

Features:
X // Populate shop pages with their items list
X // finish setting up npc post (onchanges in newnpcoptions)
X // Create tables for NPC traits to randomly roll on in separate file, then include that file in the new NPC generation.
X // Hook up NPC generation
X // Set up NPC pages
X // Set up player access to campaigns (hashed link to join a campaign?)
X // Complete deletion for shops (X), items in shop lists (X), and NPCs (X), campaigns (X) (and leave campaign (X)), and show buttons only to DM (X)
X // Make sure players and DMs can only join a campaign once
X // Format items display, Navbar conditionals
X // Implement Search in Campaign Dashboard
X // Add note bullet points for NPCs (model update, axios route, slice and service, npc page update notes event)
X // Add location to NPC sheets
X // Add delete note feature (delete button and onclick is ready, just need slice/service/controller to splice it out)
X // Styling (create campaign, join campaign, shop)
X // Complete new item push to shop_list (push works, need to refresh state. Also need to make remove item work for items with no ID)
X // animations (modals), (X) add shop and add npc buttons on campaign page, add campaign on campaigns page
X // How it works page with gifs
X // Responsive sizing
// Error displays (custom item needs all fields, not a full list of items could be generated due to limited items in database, etc...)
// prevent injection with field/text validation
// increase gen table size
// A few unit tests
// Deployment


// Make talking point list for what I did in my project
- talk about modern stuff Im doing:
    - CSS injection in React using styles
    - switching from class react components to function components
- lessons learned for future:
    - JOI regexp pattern protection for backend model
    - pass a lot more keys to components to allow them to be reused



sources for generation tables:
occupations - https://negatherium.com/npc-generator/joblist.html
names - https://barelyharebooks.com/a-master-list-of-300-fantasy-names-characters-towns-and-villages/
personalities - https://examples.yourdictionary.com/examples-of-personality-traits.html
flaws - https://dungeongoblin.com/blog/20-characters-flaws-to-try-on-your-next-dnd-character
